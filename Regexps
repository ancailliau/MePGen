# Construct the regex
# PASS := SEPA? WORD (SEPA WORD)* SEPA?
# SEPA := punc? digi+ punc? | punc? punc 
# WORD := SYLL+
# SYLL := cons? cons vowe | cons vowe cons | vowe cons cons?


# SYLL := cons? cons vowe | cons vowe cons | vowe cons cons?
cv = Concat(Range(cons), Range(vowe))
ccv = Concat(Range(cons), cv)
vc = Concat(Range(vowe), Range(cons))
cvc = Concat(cv, Range(cons))
vcc = Concat(vc, Range(cons))
# syll1 = cons? cons vowe
syll1 = Choice(cv, ccv)
# syll2 = cons vowe cons
syll2 = cvc
# syll3 = vowe cons cons?
syll3 = Choice(vc, vcc)
syll = Choice(Choice(syll1, syll2), syll3)

# SYLL := CONS? CONS VOWE | CONS VOWE CONS | VOWE CONS CONS?
CV = Concat(Range(Cons), Range(Vowe))
CCV = Concat(Range(Cons), CV)
VC = Concat(Range(Vowe), Range(Cons))
CVC = Concat(CV, Range(Cons))
VCC = Concat(VC, Range(Cons))
# SYLL1 = CONS? CONS VOWE
SYLL1 = Choice(CV, CCV)
# SYLL2 = CONS VOWE CONS
SYLL2 = CVC
# SYLL3 = VOWE CONS CONS?
SYLL3 = Choice(VC, VCC)
SYLL = Choice(Choice(SYLL1, SYLL2), SYLL3)

# Syll = CONS cons vowe | CONS vowe | CONS vowe cons | VOWE cons cons?
Ccv = Concat(Range(Cons), cv)
Cv = Concat(Range(Cons), Range(vowe))
Cvc = Concat(Range(Cons), vc)
Vc = Concat(Range(Vowe), Range(cons))
Vcc = Concat(Vc, Range(cons))
Syll = Choice(Choice(Ccv, Cv), Choice(Cvc, Choice(Vc, Vcc)))


# WORD := SYLL+
word = Concat(syll, Repeat(syll))
Word = Concat(Syll, Repeat(syll))
WORD = Concat(SYLL, Repeat(SYLL))

fullWord = Choice(Choice(word, Word), WORD)


# SEPA := punc? digi+ punc? | punc? punc
# digp = digi+
digp = Concat(Range(digi), Repeat(Range(digi)))
# pd = punc digi+
pd = Concat(Range(punc), digp)
# dp = digi+ punc
dp = Concat(digp, Range(punc))
# pp = punc punc
pp = Concat(Range(punc), Range(punc))
pdp = Concat(Concat(Range(punc), Range(digi)), Range(punc))
# SEPA = digi+ | punc digi+ | punc digi+ punc | digi+ punc | punc | punc punc
sepa = Choice(Choice(Choice(digp, pd), pdp), Choice(Choice(dp, Range(punc)),pp))

# PASS := SEPA? WORD (SEPA WORD)* SEPA?
# swr = (SEPA WORD)*
swr = Repeat(Concat(sepa, fullWord))
# pass1 = SEPA WORD (SEPA WORD)*
pass1 = Concat(Concat(sepa, fullWord), swr)
# pass2 = SEPA WORD (SEPA WORD)* SEPA
pass2 = Concat(pass1, sepa)
# pass3 = WORD (SEPA WORD)*
pass3 = Concat(fullWord, swr)
# pass4 = WORD (SEPA WORD)* SEPA
pass4 = Concat(pass3, sepa)
# password = pass1 | pass2 | pass3 | pass4
regex = Choice(Choice(pass1, pass2), Choice(pass3, pass4))


================================================================================


# Construct the regex
# PASS := WORD (SEPA WORD)*
# SEPA := digi digi? | punc
# WORD := SYLL+
# SYLL := cons? cons vowe | cons vowe cons | vowe cons cons?


# SYLL := cons? cons vowe | cons vowe cons | vowe cons cons?
cv = Concat(Range(cons), Range(vowe))
ccv = Concat(Range(cons), cv)
vc = Concat(Range(vowe), Range(cons))
cvc = Concat(cv, Range(cons))
vcc = Concat(vc, Range(cons))
# syll1 = cons? cons vowe
syll1 = Choice(cv, ccv)
# syll2 = cons vowe cons
syll2 = cvc
# syll3 = vowe cons cons?
syll3 = Choice(vc, vcc)
syll = Choice(Choice(syll1, syll2), syll3)

# SYLL := CONS? CONS VOWE | CONS VOWE CONS | VOWE CONS CONS?
CV = Concat(Range(Cons), Range(Vowe))
CCV = Concat(Range(Cons), CV)
VC = Concat(Range(Vowe), Range(Cons))
CVC = Concat(CV, Range(Cons))
VCC = Concat(VC, Range(Cons))
# SYLL1 = CONS? CONS VOWE
SYLL1 = Choice(CV, CCV)
# SYLL2 = CONS VOWE CONS
SYLL2 = CVC
# SYLL3 = VOWE CONS CONS?
SYLL3 = Choice(VC, VCC)
SYLL = Choice(Choice(SYLL1, SYLL2), SYLL3)

# Syll = CONS cons vowe | CONS vowe | CONS vowe cons | VOWE cons cons?
Ccv = Concat(Range(Cons), cv)
Cv = Concat(Range(Cons), Range(vowe))
Cvc = Concat(Range(Cons), vc)
Vc = Concat(Range(Vowe), Range(cons))
Vcc = Concat(Vc, Range(cons))
Syll = Choice(Choice(Ccv, Cv), Choice(Cvc, Choice(Vc, Vcc)))


# WORD := SYLL+
word = Concat(syll, Repeat(syll))
Word = Concat(Syll, Repeat(syll))
WORD = Concat(SYLL, Repeat(SYLL))

fullWord = Choice(Choice(word, Word), WORD)


# SEPA = digi | digi digi | punc
sepa = Choice(Choice(Range(digi), Concat(Range(digi), Range(digi))), Range(punc))

# PASS = WORD (SEPA WORD)*
regex = Concat(fullWord, Repeat(Concat(sepa, fullWord)))


================================================================================


# Construct the regex
# PASS := WORD (SEPA WORD)*
# SEPA := digi digi? | punc
# WORD := SYLL+
# SYLL := cons? cons vowe


# SYLL := cons? cons vowe
cv = Concat(Range(cons), Range(vowe))
ccv = Concat(Range(cons), cv)
syll = Choice(ccv, cv)

# SYLL := CONS? CONS VOWE
CV = Concat(Range(Cons), Range(Vowe))
CCV = Concat(Range(Cons), CV)
SYLL = Choice(CCV, CV)

# Syll = CONS cons? vowe
Ccv = Concat(Range(Cons), cv)
Cv = Concat(Range(Cons), Range(vowe))
Syll = Choice(Ccv, Cv)


# WORD := SYLL+
word = Concat(syll, Repeat(syll))
Word = Concat(Syll, Repeat(syll))
WORD = Concat(SYLL, Repeat(SYLL))

fullWord = Choice(Choice(word, Word), WORD)


# SEPA = digi | digi digi | punc
sepa = Choice(Choice(Range(digi), Concat(Range(digi), Range(digi))), Range(punc))

# PASS = WORD (SEPA WORD)*
regex = Concat(fullWord, Repeat(Concat(sepa, fullWord)))



================================================================================



# Construct the regex
# PASS := WORD (SEPA WORD)*
# SEPA := digi digi? | punc
# WORD := SYLL+
# SYLL := cons vowe


# SYLL := cons vowe
syll = Concat(Range(cons), Range(vowe))

# SYLL := CONS VOWE
SYLL = Concat(Range(Cons), Range(Vowe))

# Syll = CONS vowe
Syll = Concat(Range(Cons), Range(vowe))


# WORD := SYLL+
word = Concat(syll, Repeat(syll))
Word = Concat(Syll, Repeat(syll))
WORD = Concat(SYLL, Repeat(SYLL))

fullWord = Choice(Choice(word, Word), WORD)


# SEPA = digi | digi digi | punc
sepa = Choice(Choice(Range(digi), Concat(Range(digi), Range(digi))), Range(punc))

# PASS = WORD (SEPA WORD)*
regex = Concat(fullWord, Repeat(Concat(sepa, fullWord)))



================================================================================



# Construct the regex
# PASS := WORD (SEPA WORD)*
# SEPA := digi digi? | punc
# WORD := SYLL SYLL+
# SYLL := cons vowe

syll = Concat(Range(cons), Range(vowe))
SYLL = Concat(Range(Cons), Range(Vowe))
Syll = Concat(Range(Cons), Range(vowe))

# WORD := SYLL SYLL+
word = Concat(syll, Concat(syll, Repeat(syll)))
Word = Concat(Syll, Concat(syll, Repeat(syll)))
WORD = Concat(SYLL, Concat(SYLL, Repeat(SYLL)))

fullWord = Choice(Choice(word, Word), WORD)


# SEPA = digi | digi digi | punc
sepa = Choice(Choice(Range(digi), Concat(Range(digi), Range(digi))), Range(punc))

# PASS = WORD (SEPA WORD)*
regex = Concat(fullWord, Repeat(Concat(sepa, fullWord)))



================================================================================



# Construct the regex
# PASS := SEPA? WORD (SEPA WORD)* SEPA?
# SEPA := punc? digi digi? punc? | punc
# WORD := SYLL SYLL+
# SYLL := cons vowe

syll = Concat(Range(cons), Range(vowe))
SYLL = Concat(Range(Cons), Range(Vowe))
Syll = Concat(Range(Cons), Range(vowe))

# WORD := SYLL SYLL+
word = Concat(syll, Concat(syll, Repeat(syll)))
Word = Concat(Syll, Concat(syll, Repeat(syll)))
WORD = Concat(SYLL, Concat(SYLL, Repeat(SYLL)))

fullWord = Choice(Choice(word, Word), WORD)


# SEPA := punc? digi digi? punc? | punc
dd = Concat(Range(digi), Range(digi))
dde = Choice(Range(digi), dd)
pedde = Choice(dde, Concat(Range(punc), dde))
peddepe = Choice(pedde, Concat(pedde, Range(punc)))
sepa = Choice(peddepe, Range(punc))

# PASS := SEPA? WORD (SEPA WORD)* SEPA?
sws = Repeat(Concat(sepa, fullWord))
wsws = Concat(fullWord, sws)
sewsws = Choice(Concat(sepa, wsws), wsws)
sewswsse = Choice(sewsws, Concat(sewsws, sepa))

regex = sewswsse



================================================================================



# Construct the regex
# PASS := SEPA? WORD (SEPA WORD)* SEPA?
# SEPA := punc? digi digi? punc? | punc
# WORD := SYLL SYLL+
# SYLL := GCON GVOW
# GVOW := vowe [hmn]? | vowe vowe
# GCON := /* generated from gconbase */

gconbase = {
	'b': 'fhjlmnprsvwz',
	'c': 'cfhklmnrsvwxz',
	'd': 'dhjlmnrstwz',
	'f': 'fhlmnrvw',
	'g': 'fghlmnrstwz',
	'h': 'bcdfghjklmnpqrstvwxz',
	'j': 'fghjlmnrtvw',
	'k': 'cfhklmnrsvwxz',
	'l': 'bcdfghjklmnpqrstvwxz',
	'm': 'bcdfghjklmnpqrstvwxz',
	'n': 'bcdfghjklmnpqrstvwxz',
	'p': 'fhjlmnprsvwz',
	'q': 'cfhklmnrsvwxz',
	'r': 'bcdfghjklmnpqrstvwxz',
	's': 'cfghklmnpqrsvwz',
	't': 'dhjlmnrstwz',
	'v': 'fhlmnrvw',
	'w': 'hw',
	'x': 'hsxz',
	'z': 'cfghklmnpqrsvwz'
}

def generate_regex_from_dict(chardict):
	"""
	Generates the regex corresponding to the association in chardict.
	chardict is a dictionary where keys are single characters and values are
	characters ranges.
	"""
	
	def _generate_choice_regex_from_list(reglist):
		"""
		Generates a regex made of choices, corresponding to the choices to
		take one regex of reglist.
		reglist is a list of regex, and every element is uniquely present in it.
		reglist is not empty.
		"""
		
		if len(reglist) == 1:
			return reglist[0]
			
		else:
			left = reglist[:int(len(reglist) / 2)]
			right = reglist[int(len(reglist) / 2):]
			lreg = _generate_choice_regex_from_list(left)
			rreg = _generate_choice_regex_from_list(right)
			return Choice(lreg, rreg)
	
	conslist = []
	for char in chardict:
		ranges = [Range(c) for c in chardict[char]]
		choices = _generate_choice_regex_from_list(ranges)
		conslist.append(Choice(Range(char), Concat(Range(char), choices)))
		
	return _generate_choice_regex_from_list(conslist)
	
	
gcon = generate_regex_from_dict(gconbase)
		

# gvow := vowe [hmnw]? | vowe vowe
gvow = Choice(
			Choice(
				Concat(
					Range(vowe),
					Range('hmnw')
				),
				Range(vowe)
			),
			Concat(
				Range(vowe),
				Range(vowe)
			)
		)

#syll = Concat(Range(cons), Range(vowe))
#SYLL = Concat(Range(Cons), Range(Vowe))
#Syll = Concat(Range(Cons), Range(vowe))

syll = Concat(gcon, gvow)


# WORD := SYLL SYLL+
#word = Concat(syll, Concat(syll, Repeat(syll)))
#Word = Concat(Syll, Concat(syll, Repeat(syll)))
#WORD = Concat(SYLL, Concat(SYLL, Repeat(SYLL)))

#fullWord = Choice(Choice(word, Word), WORD)

fullWord = Concat(syll, Choice(syll, Concat(syll, Repeat(syll))))


# SEPA := punc? digi digi? punc? | punc
dd = Concat(Range(digi), Range(digi))
dde = Choice(Range(digi), dd)
pedde = Choice(dde, Concat(Range(punc), dde))
peddepe = Choice(pedde, Concat(pedde, Range(punc)))
sepa = Choice(peddepe, Range(punc))

# PASS := SEPA? WORD (SEPA WORD)* SEPA?
sws = Repeat(Concat(sepa, fullWord))
wsws = Concat(fullWord, sws)
sewsws = Choice(Concat(sepa, wsws), wsws)
sewswsse = Choice(sewsws, Concat(sewsws, sepa))

regex = sewswsse